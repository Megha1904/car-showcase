import { useState, useEffect } from 'react';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent } from "@/components/ui/card";
import { ChevronLeft, ChevronRight, ArrowsMaximize } from "lucide-react";
import './CarShowcase.css';

const CarShowcase = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [is360Active, setIs360Active] = useState(false);
  const [invites, setInvites] = useState(1);
  const [duration, setDuration] = useState(1);
  const [totalPrice, setTotalPrice] = useState(0);

  const slides = [
    "https://images.unsplash.com/photo-1606664515524-ed2f786a0bd6",
    "https://images.unsplash.com/photo-1542282088-fe8426682b8f",
    "https://images.unsplash.com/photo-1607853202273-797f1c22a38e"
  ];

  const moveCarousel = (direction) => {
    setCurrentSlide((prev) => 
      (prev + direction + slides.length) % slides.length
    );
  };

  const calculatePrice = () => {
    const basePrice = 100;
    const invitePrice = 50;
    const total = (basePrice * duration) + (invitePrice * invites);
    setTotalPrice(total);
  };

  useEffect(() => {
    const timer = setInterval(() => moveCarousel(1), 5000);
    return () => clearInterval(timer);
  }, []);

  return (
    <div className="container mx-auto p-4 max-w-6xl">
      <Card className="p-6 mb-8">
        <CardContent>
          <div className="carousel relative mb-6">
            <div className="flex overflow-hidden rounded-lg">
              <div 
                className={`flex transition-transform duration-500 ${is360Active ? 'rotating' : ''}`}
                style={{ 
                  width: `${slides.length * 100}%`,
                  transform: `translateX(-${currentSlide * (100 / slides.length)}%)`
                }}
              >
                {slides.map((slide, index) => (
                  <img
                    key={index}
                    src={slide}
                    alt={`Car ${index + 1}`}
                    className="w-full h-64 object-cover"
                    style={{ width: `${100 / slides.length}%` }}
                  />
                ))}
              </div>
            </div>
            <Button
              variant="secondary"
              className="absolute left-0 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-r"
              onClick={() => moveCarousel(-1)}
            >
              <ChevronLeft />
            </Button>
            <Button
              variant="secondary"
              className="absolute right-0 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-l"
              onClick={() => moveCarousel(1)}
            >
              <ChevronRight />
            </Button>
          </div>

          <div className="text-center mb-6">
            <Button
              variant="default"
              className="px-6 py-2"
              onClick={() => setIs360Active(!is360Active)}
            >
              <ArrowsMaximize className="mr-2" /> Toggle 360Â° View
            </Button>
          </div>

          <div className="grid md:grid-cols-2 gap-8">
            <div className="car-info">
              <h2 className="text-2xl font-bold mb-4">Car Overview</h2>
              <div className="grid grid-cols-2 gap-4">
                {[
                  { label: "Model", value: "BMW M4 Competition" },
                  { label: "Year", value: "2023" },
                  { label: "Mileage", value: "1,234 km" },
                  { label: "Price", value: "$89,900" }
                ].map((item, index) => (
                  <Card key={index} className="p-4">
                    <p className="text-gray-600">{item.label}</p>
                    <p className="font-semibold">{item.value}</p>
                  </Card>
                ))}
              </div>
            </div>

            <div className="calculator">
              <h2 className="text-2xl font-bold mb-4">Price Calculator</h2>
              <Card className="p-6">
                <div className="space-y-4">
                  <div>
                    <label className="block text-gray-600 mb-2">Number of Invites</label>
                    <Input
                      type="number"
                      min="1"
                      value={invites}
                      onChange={(e) => setInvites(Number(e.target.value))}
                    />
                  </div>
                  <div>
                    <label className="block text-gray-600 mb-2">Duration (Days)</label>
                    <Input
                      type="number"
                      min="1"
                      value={duration}
                      onChange={(e) => setDuration(Number(e.target.value))}
                    />
                  </div>
                  <Button
                    variant="default"
                    className="w-full"
                    onClick={calculatePrice}
                  >
                    Calculate Price
                  </Button>
                  <div className="text-center">
                    <p className="text-gray-600">Total Price:</p>
                    <p className="text-2xl font-bold">${totalPrice.toLocaleString()}</p>
                  </div>
                </div>
              </Card>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default CarShowcase;

/* CarShowcase.css */
.carousel {
  perspective: 1000px;
}

.car-rotate {
  transform-style: preserve-3d;
  transition: transform 0.5s;
}

@keyframes rotate360 {
  from { transform: rotateY(0deg); }
  to { transform: rotateY(360deg); }
}

.rotating {
  animation: rotate360 8s linear infinite;
}